<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>study</groupId>
  <artifactId>maven</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>maven Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  
  <!-- 自定义变量 -->
  <properties>
  	<!-- 定义打包环境标志 -->
  	<project.environment>dev</project.environment>
  </properties>
	<dependencies>
		<dependency>
			<groupId>ro.isdc.wro4j</groupId>
			<artifactId>wro4j-core</artifactId>
			<version>1.6.2</version>
		</dependency>
	</dependencies>
  
  <build>
  	<!-- 打出包的名字获取名字的一部分 -->
    <finalName>maven-packge-name</finalName>
    <plugins>
    	<!-- 压缩前端代码开始 start -->
    	<!-- 1. 过滤掉原来的文件，否则最终打出来的包中会包含原来分开的文件如a.js, b.js, c.js 等  -->
    	<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.4</version>
            <executions>
                <execution>
                    <id>prepare-war</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>exploded</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <useCache>true</useCache>
                <warSourceExcludes>sources/**/*.js,sources/**/*.css</warSourceExcludes>
            </configuration>
        </plugin>
        <!--  -->
   		<plugin>
		    <groupId>ro.isdc.wro4j</groupId>
		    <artifactId>wro4j-maven-plugin</artifactId>
		    <version>1.6.2</version>
		    <executions>
		     <execution>
		      <phase>compile</phase>
		      <goals>
		       <goal>run</goal>
		      </goals>
		     </execution>
		    </executions>
		    <configuration>
		     <targetGroups>css,js</targetGroups>
		
		    <!-- 这个配置是告诉wro4j在打包静态资源的时候是否需要最小化文件,开发的时候可以设成false,方便调试 -->
		     <minimize>false</minimize>
		     <wroFile>wro.xml</wroFile>
		     <!-- 指定打包后文件存放位置 -->
		     <jsDestinationFolder>${project.build.directory}/${project.build.finalName}/sources/aa/js</jsDestinationFolder>
		     <cssDestinationFolder>${project.build.directory}/${project.build.finalName}/sources/bb/css</cssDestinationFolder>
		<!--      <destinationFolder>${project.build.directory}/src/main/webapp/wro/</destinationFolder> -->
		<!--      <contextFolder>${project.build.directory}/src/main/webapp/</contextFolder> -->
		
		<!-- 这个配置是第二步优化需要用到的,暂时忽略 -->
		<!--      <wroManagerFactory>com.rootrip.platform.common.web.wro.CustomWroManagerFactory</wroManagerFactory> -->
		    </configuration>
         </plugin>
         
         <!-- 压缩前端代码结束 end -->
         
         
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <replaceregexp flags="smg" file="${project.build.directory}/${project.build.finalName}/index.html">
                                    <regexp pattern="!-- mergeTo:(.*?).js --.*?-- mergeTo --" />
                                    <substitution expression="script type=&quot;text/javascript&quot; src=&quot;./js/\1.js&quot;&gt;&lt;/script" />
                                </replaceregexp>
                                <replace file="${project.build.directory}/${project.build.finalName}/sources/aa/js/js.js">
                                    <replacetoken>'</replacetoken>
                                    <replacevalue>\'</replacevalue>
                                </replace>
                                <replace file="${project.build.directory}/${project.build.finalName}/sources/aa/js/js.js">
                                    <replacetoken>`</replacetoken>
                                    <replacevalue>'</replacevalue>
                                </replace>
                                <replace file="${project.build.directory}/${project.build.finalName}/sources/aa/js/js.js">
                                    <replacetoken>`</replacetoken>
                                    <replacevalue>'</replacevalue>
                                </replace>
                                <replaceregexp flags="mg" file="${project.build.directory}/${project.build.finalName}/sources/aa/js/js.js">
                                    <regexp pattern="^([^A-Za-z\r\n\t].+)$" />
                                    <substitution expression="'\1" />
                                </replaceregexp>
                                <replaceregexp flags="mg" file="${project.build.directory}/${project.build.finalName}/sources/aa/js/js.js">
                                    <regexp pattern="^(.+[^;])$" />
                                    <substitution expression="\1'+" />
                                </replaceregexp>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
    </plugins>
  </build>
</project>
